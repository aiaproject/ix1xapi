<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Payment Page</title>
    
    <!-- Google Font: Poppins Bold -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@700&display=swap" rel="stylesheet">
    
    <style>
        body {
            font-family: 'Poppins', sans-serif;
            margin: 50px;
            background-color: #f4f4f4;
        }

        h1, h3, h4 {
            font-weight: 700;
        }

        input, select {
            padding: 10px;
            margin: 10px 0;
            width: 100%;
            border-radius: 10px;
            border: 1px solid #ccc;
            font-size: 16px;
        }

        button {
            padding: 12px 24px;
            border: none;
            background-color: #007BFF;
            color: white;
            font-size: 16px;
            border-radius: 50px; /* Pill-shaped button */
            cursor: pointer;
            font-weight: 700;
            transition: background-color 0.3s ease;
        }

        button:hover {
            background-color: #0056b3;
        }

        .hidden {
            display: none;
        }

        .payment-methods, .payment-details {
            margin-top: 20px;
        }

        #confirmationPopup {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: #fff;
            border: 1px solid #ccc;
            padding: 40px;
            display: none;
            text-align: center;
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
            border-radius: 20px;
        }

        #confirmationPopup .checkmark {
            font-size: 50px;
            color: green;
            margin-bottom: 20px;
        }

        #confirmationPopup h2 {
            margin: 0 0 10px 0;
        }

        #confirmationPopup p {
            margin: 0;
            font-size: 16px;
        }
        .stripe-connect {
  background: #635bff;
  display: inline-block;
  height: 38px;
  text-decoration: none;
  width: 180px;

  border-radius: 4px;
  -moz-border-radius: 4px;
  -webkit-border-radius: 4px;

  user-select: none;
  -moz-user-select: none;
  -webkit-user-select: none;
  -ms-user-select: none;

  -webkit-font-smoothing: antialiased;
}

.stripe-connect span {
  color: #ffffff;
  display: block;
  font-family: sohne-var, "Helvetica Neue", Arial, sans-serif;
  font-size: 15px;
  font-weight: 400;
  line-height: 14px;
  padding: 11px 0px 0px 24px;
  position: relative;
  text-align: left;
}

.stripe-connect:hover {
  background: #7a73ff;
}

.stripe-connect.slate {
  background: #0a2540;
}

.stripe-connect.slate:hover {
  background: #425466;
}

.stripe-connect.white {
  background: #ffffff;
}

.stripe-connect.white span {
  color: #0a2540;
}

.stripe-connect.white:hover {
  background: #f6f9fc;
}

.stripe-connect span::after {
  background-repeat: no-repeat;
  background-size: 49.58px;
  content: "";
  height: 20px;
  left: 62%;
  position: absolute;
  top: 28.95%;
  width: 49.58px;
}

/* Logos */
.stripe-connect span::after {
  background-image: url("data:image/svg+xml,%3C%3Fxml version='1.0' encoding='utf-8'%3F%3E%3C!-- Generator: Adobe Illustrator 23.0.4, SVG Export Plug-In . SVG Version: 6.00 Build 0) --%3E%3Csvg version='1.1' id='Layer_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' viewBox='0 0 468 222.5' style='enable-background:new 0 0 468 222.5;' xml:space='preserve'%3E%3Cstyle type='text/css'%3E .st0%7Bfill-rule:evenodd;clip-rule:evenodd;fill:%23FFFFFF;%7D%0A%3C/style%3E%3Cg%3E%3Cpath class='st0' d='M414,113.4c0-25.6-12.4-45.8-36.1-45.8c-23.8,0-38.2,20.2-38.2,45.6c0,30.1,17,45.3,41.4,45.3 c11.9,0,20.9-2.7,27.7-6.5v-20c-6.8,3.4-14.6,5.5-24.5,5.5c-9.7,0-18.3-3.4-19.4-15.2h48.9C413.8,121,414,115.8,414,113.4z M364.6,103.9c0-11.3,6.9-16,13.2-16c6.1,0,12.6,4.7,12.6,16H364.6z'/%3E%3Cpath class='st0' d='M301.1,67.6c-9.8,0-16.1,4.6-19.6,7.8l-1.3-6.2h-22v116.6l25-5.3l0.1-28.3c3.6,2.6,8.9,6.3,17.7,6.3 c17.9,0,34.2-14.4,34.2-46.1C335.1,83.4,318.6,67.6,301.1,67.6z M295.1,136.5c-5.9,0-9.4-2.1-11.8-4.7l-0.1-37.1 c2.6-2.9,6.2-4.9,11.9-4.9c9.1,0,15.4,10.2,15.4,23.3C310.5,126.5,304.3,136.5,295.1,136.5z'/%3E%3Cpolygon class='st0' points='223.8,61.7 248.9,56.3 248.9,36 223.8,41.3 '/%3E%3Crect x='223.8' y='69.3' class='st0' width='25.1' height='87.5'/%3E%3Cpath class='st0' d='M196.9,76.7l-1.6-7.4h-21.6v87.5h25V97.5c5.9-7.7,15.9-6.3,19-5.2v-23C214.5,68.1,202.8,65.9,196.9,76.7z'/%3E%3Cpath class='st0' d='M146.9,47.6l-24.4,5.2l-0.1,80.1c0,14.8,11.1,25.7,25.9,25.7c8.2,0,14.2-1.5,17.5-3.3V135 c-3.2,1.3-19,5.9-19-8.9V90.6h19V69.3h-19L146.9,47.6z'/%3E%3Cpath class='st0' d='M79.3,94.7c0-3.9,3.2-5.4,8.5-5.4c7.6,0,17.2,2.3,24.8,6.4V72.2c-8.3-3.3-16.5-4.6-24.8-4.6 C67.5,67.6,54,78.2,54,95.9c0,27.6,38,23.2,38,35.1c0,4.6-4,6.1-9.6,6.1c-8.3,0-18.9-3.4-27.3-8v23.8c9.3,4,18.7,5.7,27.3,5.7 c20.8,0,35.1-10.3,35.1-28.2C117.4,100.6,79.3,105.9,79.3,94.7z'/%3E%3C/g%3E%3C/svg%3E");
}

.stripe-connect.white span::after {
  background-image: url("data:image/svg+xml,%3C%3Fxml version='1.0' encoding='utf-8'%3F%3E%3C!-- Generator: Adobe Illustrator 24.0.3, SVG Export Plug-In . SVG Version: 6.00 Build 0) --%3E%3Csvg version='1.1' id='Layer_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' viewBox='0 0 468 222.5' style='enable-background:new 0 0 468 222.5;' xml:space='preserve'%3E%3Cstyle type='text/css'%3E .st0%7Bfill-rule:evenodd;clip-rule:evenodd;fill:%230A2540;%7D%0A%3C/style%3E%3Cg%3E%3Cpath class='st0' d='M414,113.4c0-25.6-12.4-45.8-36.1-45.8c-23.8,0-38.2,20.2-38.2,45.6c0,30.1,17,45.3,41.4,45.3 c11.9,0,20.9-2.7,27.7-6.5v-20c-6.8,3.4-14.6,5.5-24.5,5.5c-9.7,0-18.3-3.4-19.4-15.2h48.9C413.8,121,414,115.8,414,113.4z M364.6,103.9c0-11.3,6.9-16,13.2-16c6.1,0,12.6,4.7,12.6,16H364.6z'/%3E%3Cpath class='st0' d='M301.1,67.6c-9.8,0-16.1,4.6-19.6,7.8l-1.3-6.2h-22v116.6l25-5.3l0.1-28.3c3.6,2.6,8.9,6.3,17.7,6.3 c17.9,0,34.2-14.4,34.2-46.1C335.1,83.4,318.6,67.6,301.1,67.6z M295.1,136.5c-5.9,0-9.4-2.1-11.8-4.7l-0.1-37.1 c2.6-2.9,6.2-4.9,11.9-4.9c9.1,0,15.4,10.2,15.4,23.3C310.5,126.5,304.3,136.5,295.1,136.5z'/%3E%3Cpolygon class='st0' points='223.8,61.7 248.9,56.3 248.9,36 223.8,41.3 '/%3E%3Crect x='223.8' y='69.3' class='st0' width='25.1' height='87.5'/%3E%3Cpath class='st0' d='M196.9,76.7l-1.6-7.4h-21.6v87.5h25V97.5c5.9-7.7,15.9-6.3,19-5.2v-23C214.5,68.1,202.8,65.9,196.9,76.7z'/%3E%3Cpath class='st0' d='M146.9,47.6l-24.4,5.2l-0.1,80.1c0,14.8,11.1,25.7,25.9,25.7c8.2,0,14.2-1.5,17.5-3.3V135 c-3.2,1.3-19,5.9-19-8.9V90.6h19V69.3h-19L146.9,47.6z'/%3E%3Cpath class='st0' d='M79.3,94.7c0-3.9,3.2-5.4,8.5-5.4c7.6,0,17.2,2.3,24.8,6.4V72.2c-8.3-3.3-16.5-4.6-24.8-4.6 C67.5,67.6,54,78.2,54,95.9c0,27.6,38,23.2,38,35.1c0,4.6-4,6.1-9.6,6.1c-8.3,0-18.9-3.4-27.3-8v23.8c9.3,4,18.7,5.7,27.3,5.7 c20.8,0,35.1-10.3,35.1-28.2C117.4,100.6,79.3,105.9,79.3,94.7z'/%3E%3C/g%3E%3C/svg%3E");
}

/* Please remove from your implementation. Used to display the white button on the white background */
.stripe-connect.white {
  left: 1px;
  position: relative;
  top: 1px;
}


    </style>
</head>
<body>

    <h1>Payment Page</h1>
    
    <div>
        <label for="itemName">Item Name:</label>
        <input type="text" id="itemName" readonly>
    </div>

    <div>
        <label for="itemPrice">Item Price ($):</label>
        <input type="number" id="itemPrice" readonly>
    </div>

    <div>
        <label for="discountCode">Discount Code:</label>
        <input type="text" id="discountCode" placeholder="Enter discount code" oninput="applyDiscount()">
    </div>

    <div class="payment-methods" id="paymentMethods">
        <h3>Select Payment Method</h3>
        <select id="paymentMethod" onchange="showPaymentDetails()">
            <option value="">Select a method</option>
        </select>
    </div>

    <!-- Custom HTML for Credit Card -->
    <div class="payment-details hidden" id="creditCardDetails">
        <h4>Credit Card Details</h4>
        <input type="text" placeholder="Card Number">
        <input type="text" placeholder="Card Holder Name">
        <input type="text" placeholder="Expiry Date (MM/YY)">
        <input type="text" placeholder="CVV">
    </div>

    <!-- Custom HTML for PayPal -->
    <div class="payment-details hidden" id="paypalDetails">
        <h4>PayPal Details</h4>
        <input type="email" placeholder="PayPal Email">
    </div>

    <!-- Custom HTML for Bank Transfer -->
    <div class="payment-details hidden" id="bankTransferDetails">
        <h4>Bank Transfer Details</h4>
        <input type="text" placeholder="Account Number">
        <input type="text" placeholder="Bank Name">
        <input type="text" placeholder="Routing Number">
    </div>

    <button onclick="completeOrder()">Complete Order</button>

    <!-- Custom Confirmation Popup -->
    <div id="confirmationPopup">
        <div class="checkmark">✔️</div>
        <h2>Order Confirmed!</h2>
        <p id="orderDetails"></p>
    </div>

    <script>
        // Define a product lookup table (object) for the PIDs, names, and prices
        const products = {
            '101': { 
                name: 'Product 101', 
                price: 100, 
                paymentMethods: ['', ''] 
            },
            '028291.2982902.20829': { 
                name: 'BadBoyTyler Full Access [FREE FOR A LIMITED TIME- YOU MUST COMPLETE ORDER THROUGH STRIPE]', 
                price: 0.01, 
                paymentMethods: ['stripeNC'] 
            },
            '103': { 
                name: 'Product 103', 
                price: 150, 
                paymentMethods: [''] 
            },
            // Add more products as needed
        };

        // Payment method labels for display
        const paymentMethodLabels = {
            'IX1XpayAPI': 'IX1X Pay',
            'stripeNC': 'Stripe',
           
        };

        // Fetch the query parameters
        const urlParams = new URLSearchParams(window.location.search);
        const pid = urlParams.get('pid'); // Product ID

        // Check if the PID exists
        if (!pid || !products[pid]) {
            // Redirect to error page if no PID or invalid PID is found
            window.location.href = 'https://ix1x.com/api/pay/error.no.pid.xml';
        } else {
            // Set the item name and price from the lookup table
            document.getElementById('itemName').value = products[pid].name;
            document.getElementById('itemPrice').value = products[pid].price;

            // Populate the payment methods dropdown based on the product
            const paymentMethodSelect = document.getElementById('paymentMethod');
            const availableMethods = products[pid].paymentMethods;
            availableMethods.forEach(method => {
                const option = document.createElement('option');
                option.value = method;
                option.text = paymentMethodLabels[method];
                paymentMethodSelect.appendChild(option);
            });
        }

        function applyDiscount() {
            const discountCode = document.getElementById('discountCode').value;
            const paymentMethodsDiv = document.getElementById('paymentMethods');
            const paymentDetailsDivs = document.querySelectorAll('.payment-details');

            if (discountCode === '100OFF') {
                // Hide payment methods and details if discount gives 100% off
                paymentMethodsDiv.classList.add('hidden');
                paymentDetailsDivs.forEach(div => div.classList.add('hidden'));
                document.getElementById('itemPrice').value = '0.00';
            } else {
                // Show payment methods if not 100% off
                paymentMethodsDiv.classList.remove('hidden');
                // Reset to the original price from the lookup table
                document.getElementById('itemPrice').value = products[pid].price;
            }
        }

        function showPaymentDetails() {
            const selectedMethod = document.getElementById('paymentMethod').value;
            const paymentDetailsDivs = document.querySelectorAll('.payment-details');
            
            // Hide all payment method details
            paymentDetailsDivs.forEach(div => div.classList.add('hidden'));
            
            // Show the selected payment method details
            if (selectedMethod) {
                document.getElementById(`${selectedMethod}Details`).classList.remove('hidden');
            }
        }

        function completeOrder() {
            const itemName = document.getElementById('itemName').value;
            const itemPrice = document.getElementById('itemPrice').value;
            const paymentMethod = document.getElementById('paymentMethod').value;
            const orderDetails = document.getElementById('orderDetails');

            let redirectUrl = '';

            // Set the confirmation details and popup
            if (itemPrice == 0) {
                orderDetails.innerText = `Order completed for ${itemName}. No payment required.`;
            } else {
                orderDetails.innerText = `Order completed for ${itemName} using ${paymentMethod}. Total: $${itemPrice}`;
            }

            // Display the custom confirmation popup
            document.getElementById('confirmationPopup').style.display = 'block';

            // Redirect based on the product ID (you can add more cases here)
            if (pid === '101') {
                redirectUrl = 'https://example.com/redirect/product101';
            } else if (pid === '028291.2982902.20829') {
                redirectUrl = 'https://badboytyler.com/app/profile.html?OrderConfrimed.PayCompleted.Accss0';
            } else {
                redirectUrl = 'https://example.com/redirect/default';
            }

            // Redirect after 3 seconds
            setTimeout(() => {
                window.location.href = redirectUrl;
            }, 3000);
        }
    </script>

</body>
</html>
